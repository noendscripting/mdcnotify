{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "LogicAppName": {
            "type": "String"
        },
        "connectionDisplayName": {
            "type": "string"
        },
        "emailSuffix": {
            "type": "string"
        },
        "sharedMailBoxAddress": {
            "type": "string"
        }
    },
    "variables": {
        "connections_office365_name":"office365",
        "connections_excelonlinebusiness_name":"excelonlinebusiness"
        

    },
    "resources": [

        //Sharepoint Connector
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('connections_excelonlinebusiness_name')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('connectionDisplayName')]",
    
                "api": {
                    "name": "[variables('connections_excelonlinebusiness_name')]",
                    "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', resourceGroup().location, variables('connections_excelonlinebusiness_name'))]"
                }
                
            }
        },
        // Outlook Connector
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('connections_office365_name')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('connectionDisplayName')]",
                "api": {
                    "name": "[variables('connections_office365_name')]",
                    "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', resourceGroup().location, variables('connections_office365_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('LogicAppName')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('connections_excelonlinebusiness_name'))]",
                "[resourceId('Microsoft.Web/connections', variables('connections_office365_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "emailSuffix": {
                            "defaultValue": "[parameters('emailSuffix')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Week",
                                "interval": 1
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Week",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each_Subscription": {
                            "foreach": "@body('Parse_JSON_Subscription_list')?['data']",
                            "actions": {
                                "Create_CSV_table_Recomendations_List": {
                                    "runAfter": {
                                        "Parse_JSON_recommendations_list": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Table",
                                    "inputs": {
                                        "format": "CSV",
                                        "from": "@body('Parse_JSON_recommendations_list')?['data']"
                                    }
                                },
                                "For_each_Owner": {
                                    "foreach": "@body('List_rows_present_in_a_table')?['value']",
                                    "actions": {
                                        "Append_subscription_contact_to_emailAddress_variable": {
                                            "runAfter": {},
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "emailAddress",
                                                "value": "@concat(items('For_each_Owner')?['Owner'],'@',parameters('emailSuffix'),';')"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "List_rows_present_in_a_table": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "HTTP_Get_Non_Compliant_Resources_from_Graph": {
                                    "runAfter": {
                                        "Set_variable_recomendationsQuery":[
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://management.azure.com",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "body": {
                                            "query": "@{variables('recomendationsQuery')}"
                                        },
                                        "method": "POST",
                                        "uri": "https://management.azure.com/providers/Microsoft.ResourceGraph/resources?api-version=2021-03-01"
                                    }
                                },
                                "List_rows_present_in_a_table": {
                                    "runAfter": {
                                        "Reset_variable_emailAddress": [
                                            "Succeeded"
                                        ]
                                    },
                                    "metadata": {
                                        "015QTX6EICGNJP73KTJ5FLVRVKXO2JUQPV": "/subscrioptioncontacs/Subscription List.xlsx"
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['excelonlinebusiness']['connectionId']"
                                                
                                            }
                                        },
                                        "method": "get",
                                        "path": "/drives/@{encodeURIComponent('b!ykMO0YxxKku8O1Ov05QGUzXZEASKNlxErRZLYUytzoZTQ9_BEaRZQIrIW5_qm3_R')}/files/@{encodeURIComponent(encodeURIComponent('015QTX6EICGNJP73KTJ5FLVRVKXO2JUQPV'))}/tables/@{encodeURIComponent('SubscriptionTable')}/items",
                                        "queries": {
                                            "$filter": "SubscriptionName eq '@{items('For_each_Subscription')?['name']}'",
                                            "$select": "Owner",
                                            "source": "groups/74001d0e-3f8b-4e8f-a8dd-108798afc5b1"
                                        }
                                    }
                                },
                                "Parse_JSON_recommendations_list": {
                                    "runAfter": {
                                        "HTTP_Get_Non_Compliant_Resources_from_Graph": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('HTTP_Get_Non_Compliant_Resources_from_Graph')",
                                        "schema": {
                                            "properties": {
                                                "count": {
                                                    "type": "integer"
                                                },
                                                "data": {
                                                    "items": {
                                                        "properties": {
                                                            "ComplianceDetails": {
                                                                "type": "string"
                                                            },
                                                            "CompliancePolicyName": {
                                                                "type": "string"
                                                            },
                                                            "DisplayName": {
                                                                "type": "string"
                                                            },
                                                            "RemediationSteps": {
                                                                "type": "string"
                                                            },
                                                            "ResourceId": {
                                                                "type": "string"
                                                            },
                                                            "Severity": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Severity",
                                                            "CompliancePolicyName",
                                                            "DisplayName",
                                                            "ComplianceDetails",
                                                            "RemediationSteps",
                                                            "ResourceId"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "facets": {
                                                    "type": "array"
                                                },
                                                "resultTruncated": {
                                                    "type": "string"
                                                },
                                                "totalRecords": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Send_an_email_from_a_shared_mailbox_(V2)": {
                                    "runAfter": {
                                        "For_each_Owner": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "Attachments": [
                                                {
                                                    "ContentBytes": "@{base64(body('Create_CSV_table_Recomendations_List'))}",
                                                    "Name": "@{items('For_each_Subscription')?['name']}-violations.csv"
                                                }
                                            ],
                                            "Body": "<p>@{variables('emailBody')}</p>",
                                            "Importance": "Normal",
                                            "MailboxAddress": "[parameters('sharedMailBoxAddress')]",
                                            "Subject": "@{items('For_each_Subscription')?['name']} : New Compliance Recommendations Found",
                                            "To": "@{variables('emailAddress')}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/SharedMailbox/Mail"
                                    }
                                },
                                "Reset_variable_emailAddress": {
                                    "runAfter": {
                                        "Create_CSV_table_Recomendations_List": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "emailAddress",
                                        "value": "@{trim(' ')}"
                                    }
                                },
                                "Set_variable_recomendationsQuery": {
                        "inputs": {
                            "name": "recomendationsQuery",
                            "value": "securityresources| where type =~ 'microsoft.security/assessments' and name !in~ (@{join(variables('exclusionLIst'),',')})| where  subscriptionId == '@{items('For_each_Subscription')?['subscriptionId']}' | extend assessmentStatusCode = tostring(properties.status.code) | extend source = tostring(properties.resourceDetails.Source) | where assessmentStatusCode =~ 'unhealthy' and source =~ 'azure'| extend resourceId = tostring(properties.resourceDetails.Id) | extend displayName = tostring(properties.displayName) | extend details = tostring(properties.metadata.description)  | extend severity = tostring(properties.metadata.severity) | extend remediationSteps = tostring(properties.metadata.remediationDescription) | extend initiativeStatus = parse_json(properties.statusPerInitiative) | mv-expand initiativeStatus | extend compliancePolicy = iff(isempty(initiativeStatus.policyInitiativeName), 'Not Available',initiativeStatus.policyInitiativeName) | project Severity=severity,CompliancePolicyName=compliancePolicy,DisplayName=displayName,ComplianceDetails=details,RemediationSteps=remediationSteps,ResourceId=resourceId"
                        },
                        "runAfter": {},
                        "type": "SetVariable"
                    }
                            },
                            "runAfter": {
                                "Parse_JSON_Subscription_list": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "HTTP_Get_Subscription_List": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.azure.com",
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "query": "resourcecontainers|where type == 'microsoft.resources/subscriptions'|project  subscriptionId, name"
                                },
                                "method": "POST",
                                "uri": "https://management.azure.com/providers/Microsoft.ResourceGraph/resources?api-version=2021-03-01"
                            }
                        },
                        "Initialize_variable_emailAddress": {
                            "runAfter": {
                                "Initialize_variable_emailBody": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "emailAddress",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_emailBody": {
                            "runAfter": {
                                "HTTP_Get_Subscription_List": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "emailBody",
                                        "type": "string",
                                        "value": "<style type=\"text/css\">\n    tr {\n        text-align: \"center\";\n        border: 1px solid black;\n\n    }\n\th1 {\n\t\tfont-family: \"Segoe UI\";\n\t\tfont-size: 32px;\n\t\tfont-style: normal;\n\t\tfont-variant: normal;\n\t\tfont-weight: 700;\n\t\tline-height: 30px;\n\t}\n\n\th2 {\n\t\tfont-family: \"Segoe UI\";\n\t\tfont-size: 20px;\n\t\tfont-style: normal;\n\t\tfont-variant: normal;\n\t\tfont-weight: 700;\n\t\tline-height: 15px;\n\t}\n\n\th3 {\n\t\tfont-family: \"Segoe UI\";\n\t\tfont-size: 22px;\n\t\tfont-style: normal;\n\t\tfont-variant: normal;\n\t\tfont-weight: 700;\n\t\tline-height: 23.1px;\n\t}\n\n\tp {\n\t\tfont-family: \"Segoe UI\";\n\t\tfont-size: 16px;\n\t\tfont-style: normal;\n\t\tfont-variant: normal;\n\t\tfont-weight: 400;\n\t\tline-height: 20px;\n\t}\n</style>\n<table align=\"center\" cellpadding=\"1\" cellspacing=\"1\" border=\"1\"  style=\"width:800px ; border-collapse: collapse; \">\n\t<tbody>\n\t\t<tr>\n\t\t\t<th style=\"text-align:center; width:735px\" colspan=\"2\">\n\t\t\t\t<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" style=\"width: 600px;\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td><img src=\"https://raw.githubusercontent.com/Azure/Azure-Security-Center/master/.github/images/asc.png\" alt=\"\" width=\"125\" height=\"125\" /></td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<h1 style=\"text-align: left;\">Microsoft Defender for Cloud</h1>\n\t\t\t\t\t\t\t\t<h2 style=\"text-align: left;\">New Regulatory Compliance Assessment recommendations found with your resources</h2>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width:735px;\" colspan=\"2\">\n\t\t\t\t<p style=\"text-align: center;\">You are the owner of resources that have new Regulatory Compliance Assessment \n\t\t\t\t\trecommendations in Microsoft Defender for Cloud.<br />\n\t\t\t\t\tPlease review security recommendations in the atatched file and resolve them as instructed within Microsoft Defender.</p>\n\t\t\t</td>\n\t\t</tr>\n    </tbody></table>\n</td>\n</tr>\n</tbody>\n</table>"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_exclusionList": {
                "inputs": {
                    "variables": [
                        {
                            "name": "exclusionLIst",
                            "type": "array",
                            "value": [
                                "'256927c6-fa8c-79a2-6b8c-6e45e828bf3a'",
                                "'00c6d40b-e990-6acf-d4f3-471e747a27c4'",
                                "'e52064aa-6853-e252-a11e-dffc675689c2'",
                                "'383cf3bc-fdf9-4a02-120a-3e7e36c6bfee'",
                                "'4fb67663-9ab9-475d-b026-8c544cced439'",
                                "'21300918-b2e3-0346-785f-c77ff57d243b'",
                                "'83f577bd-a1b6-b7e1-0891-12ca19d1e6df'",
                                "'45cfe080-ceb1-a91e-9743-71551ed24e94'",
                                "'d1db3318-01ff-16de-29eb-28b344515626'",
                                "'94290b00-4d0c-d7b4-7cea-064a9554e681'",
                                "'151e82c5-5341-a74b-1eb0-bc38d2c84bb5'",
                                "'57e98606-6b1e-6193-0e3d-fe621387c16b'",
                                "'0876ef51-fee7-449d-ba1e-f2662c7e43c6'",
                                "'58d72d9d-0310-4792-9a3b-6dd111093cdb'",
                                "'e599a9fe-30e3-47c6-a173-8b4b6d9d3255'",
                                "'aae10e53-8403-3576-5d97-3b00f97332b2'",
                                "'b1af52e4-e968-4e2b-b6d0-6736c9651f0a'",
                                "'b6a28450-dd5d-4ba4-8806-245e20ef6632'",
                                "'f0fb2a7e-16d5-849f-be57-86db712e9bd0'",
                                "'56a6e81f-7413-4f72-9a1b-aaeeaa87c872'",
                                "'1ce68079-b783-4404-b341-d2851d6f0fa2'",
                                "'e9c320f1-03a0-4d2b-9a37-84b3bdc2e281'",
                                "'6ac66a74-761f-4a59-928a-d373eea3f028'",
                                "'400a6682-992c-4726-9549-629fbc3b988f'",
                                "'1be22853-8ed1-4005-9907-ddad64cb1417'",
                                "'77758c9d-8a56-5f54-6ff7-69a762ca6004'",
                                "'bd91-aaf1-7f14-b6e4-866de2f43146'",
                                "'4ab6e3c5-74dd-8b35-9ab9-f61b30875b27'",
                                "'2c79b4af-f830-b61e-92b9-63dfa30f16e4'",
                                "'1ff0b4c9-ed56-4de6-be9c-d7ab39645926'",
                                "'fde1c0c9-0fd2-4ecc-87b5-98956cbc1095'"
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_variable_recommendations_Query": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_variable_recommendations_Query": {
                "inputs": {
                    "variables": [
                        {
                            "name": "recomendationsQuery",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                                "Initialize_variable_emailAddress": [
                                    "Succeeded"
                                ]
                            },
                "type": "InitializeVariable"
            },
                        "Parse_JSON_Subscription_list": {
                            "runAfter": {
                                "Initialize_variable_exclusionList": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP_Get_Subscription_List')",
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "subscriptionId": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "subscriptionId",
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "facets": {
                                            "type": "array"
                                        },
                                        "resultTruncated": {
                                            "type": "string"
                                        },
                                        "totalRecords": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "[variables('connections_excelonlinebusiness_name')]": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('connections_excelonlinebusiness_name'))]",
                                "connectionName": "[variables('connections_excelonlinebusiness_name')]",
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', resourceGroup().location, variables('connections_excelonlinebusiness_name'))]"
                            },
                            "[variables('connections_office365_name')]": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('connections_office365_name'))]",
                                "connectionName": "office365",
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', resourceGroup().location, variables('connections_office365_name'))]"
                            }
                        }
                    }
                }
            }
        }
    ]
}